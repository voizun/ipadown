name: IPA Down

env:
  PYTHONIOENCODING: utf-8

# Allow Release
permissions: write-all

on: 
  workflow_dispatch:
    inputs:
      operation:
        description: 'Operation to do'
        required: true
        type: choice
        options:
          - lookup
          - historyver
          - download
          - historyver_id
          - download_id
          
      appBundleId:
        description: 'AppStore Bundle-ID (needed when using non-*_id operations)'
        required: false
      appCountry:
        description: 'AppStore Country (needed when using non-*_id operations)'
        required: false
        default: 'JP'
      
      appVerId:
        description: 'App Version Id Number (for downloading history versions)'
        required: false

      appId:
        description: 'App Id Number (needed when using *_id operations)'
        required: false
      
      debug_enabled:
        description: 'Run the build with RDP debugging enabled'
        required: false
        default: false
      itunes_debug_enabled:
        description: 'Run the build with ngrok debugging enabled'
        required: false
        default: false

jobs:
  download_ipa:
    name: 'IPATool Operations'
    runs-on: "windows-latest"
    steps:
      - name: Set up git repository
        uses: actions/checkout@v4

      - name: Setup ipatool-py
        run: |
          git clone -b itunes_server https://github.com/NyaMisty/ipatool-py
          pip3 install -r ipatool-py/requirements.txt
          mkdir -p ipaDown
        shell: bash

      - name: Setup iTunes Header Service
        uses: aeternas/actions-iTunes-header@6a57591ca54b74e2d1ec7024a84a275ae71bdd47
        if: ${{ github.event.inputs.operation != 'lookup' }}
        with:
          apple_id: ${{ secrets.APPLE_ID }}
          apple_id_pwd: ${{ secrets.APPLE_ID_PWD }}
          ngrok_token: ${{ secrets.NGROK_AUTH_TOKEN }}
        
      - name: Execute operation
        id: operation
        run: |
          # available operations: lookup, historyver, download, historyver_id, download_id
          op=${{ github.event.inputs.operation }}
          if [[ "$op" == "lookup" ]]; then
            if [[ "${{ github.event.inputs.appBundleId }}" != "" ]]; then
              python3 ipatool-py/main.py --json lookup --get-verid -b ${{ github.event.inputs.appBundleId }} -c ${{ github.event.inputs.appCountry }}
            else
              python3 ipatool-py/main.py --json lookup --get-verid -i ${{ github.event.inputs.appId }} -c ${{ github.event.inputs.appCountry }}
            fi
          elif [[ "$op" == historyver* ]]; then
            if [[ "$op" == "historyver" ]]; then
              python3 ipatool-py/main.py --json lookup -b ${{ github.event.inputs.appBundleId }} -c ${{ github.event.inputs.appCountry }} \
                                                historyver -s http://127.0.0.1:9000
            elif [[ "$op" == "historyver_id" ]]; then
              python3 ipatool-py/main.py --json historyver -s http://127.0.0.1:9000 --appId ${{ github.event.inputs.appId }}
            fi
          elif [[ "$op" == download* ]]; then
            if [[ "${{ github.event.inputs.appVerId }}" == "" ]]; then
              appVerCmd=""
            else
              appVerCmd="--appVerId ${{ github.event.inputs.appVerId }}"
            fi

            if [[ "$op" == "download" ]]; then
              output=$(python3 ipatool-py/main.py --json lookup -b ${{ github.event.inputs.appBundleId }} -c ${{ github.event.inputs.appCountry }} \
                                                download -o ipaDown -s http://127.0.0.1:9000 $appVerCmd)
            elif [[ "$op" == "download_id" ]]; then
              output=$(python3 ipatool-py/main.py --json download -o ipaDown -s http://127.0.0.1:9000 --appId ${{ github.event.inputs.appId }} $appVerCmd)
            fi
            echo "Got Downloading JSON result: $output"
          else
            echo "Unknown Operation: $op"
          fi
        shell: bash
   
      - name: Split ipa
        run: |
          mkdir -p ipaDown_split
          (cd ipaDown; find . -name "*.ipa" -size +1879048192b -exec split --bytes=1879048192 --suffix-length=3 --numeric-suffix {} ../ipaDown_split/{}. \;)
          (cd ipaDown; find . -name "*.ipa" -not -size +1879048192b -exec cp -r {} ../ipaDown_split \;)
        shell: bash

      - name: Release
        run: gh release create $(data '+%F-%H-%M-%S') ipaDown_split/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
